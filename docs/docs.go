// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "Serve the main index.html page",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "main"
                ],
                "summary": "Get main page",
                "responses": {
                    "200": {
                        "description": "HTML page",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/comments": {
            "get": {
                "description": "Получает комментарии с пагинацией и по ID родительского комментария",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Получить комментарии",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID родительского комментария",
                        "name": "parent",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Номер страницы для пагинации",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Количество комментариев на странице",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список комментариев",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_Komilov31_comment-tree_internal_model.Comment"
                            }
                        }
                    },
                    "400": {
                        "description": "error\":\"invalid payload\" or \"invalid id",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error\":\"could not get comments",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Создает новый комментарий в системе",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Создать комментарий",
                "parameters": [
                    {
                        "description": "Данные для создания комментария",
                        "name": "comment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_Komilov31_comment-tree_internal_dto.CreateComment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешно созданный комментарий",
                        "schema": {
                            "$ref": "#/definitions/github_com_Komilov31_comment-tree_internal_dto.CreateComment"
                        }
                    },
                    "400": {
                        "description": "error\":\"invalid payload",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error\":\"could not create comment in db",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/comments/all": {
            "get": {
                "description": "Возвращает полный список всех комментариев без фильтров c пагинацией",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Получить все комментарии",
                "responses": {
                    "200": {
                        "description": "Все комментарии",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_Komilov31_comment-tree_internal_model.Comment"
                            }
                        }
                    },
                    "400": {
                        "description": "error\":\"could not get comments",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/comments/search": {
            "post": {
                "description": "Ищет комментарии, содержащие указанный текст",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Поиск комментариев по тексту",
                "parameters": [
                    {
                        "description": "Текст для поиска в комментариях",
                        "name": "search",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_Komilov31_comment-tree_internal_dto.SearchText"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Найденные комментарии",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_Komilov31_comment-tree_internal_model.Comment"
                            }
                        }
                    },
                    "400": {
                        "description": "error\":\"invalid payload",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error\":\"could not get comments",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/comments/{id}": {
            "delete": {
                "description": "Удаляет комментарий по его уникальному идентификатору",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Удалить комментарий по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID комментария для удаления",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status\":\"successfully deleted comment",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "error\":\"invalid id was provided\" or \"could not delete comment from db",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_Komilov31_comment-tree_internal_dto.CreateComment": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "parent_id": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "github_com_Komilov31_comment-tree_internal_dto.SearchText": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string"
                }
            }
        },
        "github_com_Komilov31_comment-tree_internal_model.Comment": {
            "type": "object",
            "properties": {
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_Komilov31_comment-tree_internal_model.Comment"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "parent_id": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Comment Tree API",
	Description:      "A Comment Tree API where can work with comment tree.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
